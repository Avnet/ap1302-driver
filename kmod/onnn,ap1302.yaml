# SPDX-License-Identifier: (GPL-2.0-only OR BSD-2-Clause)
%YAML 1.2
---
$id: http://devicetree.org/schemas/media/i2c/onnn,ap1302.yaml#
$schema: http://devicetree.org/meta-schemas/core.yaml#

title: ON Semiconductor AP1302 Advanced Image Coprocessor

maintainers:
  - Laurent Pinchart <laurent.pinchart@ideasonboard.com>
  - Stan Bertrand <sbertrand@witekio.com>

description: |-
  The AP1302 is a standalone ISP for ON Semiconductor sensors. It interfaces to
  up to two RAW CMOS sensors over MIPI CSI-2 connections, processes the two
  video streams and outputs YUV frames to the host over a MIPI CSI-2 interface.
  Frames are output side by side or on two virtual channels.

  The sensors must be identical. They are connected to the AP1302 on dedicated
  I2C buses, and are controlled by the AP1302 firmware. They are not accessible
  from the host.

properties:
  compatible:
    const: onnn,ap1302

  reg:
    description: I2C device address.
    maxItems: 1

  clocks:
    description: Reference to the CLK clock.
    maxItems: 1

  reset-gpios:
    description: Reference to the GPIO connected to the RST pin (active low).
    maxItems: 1

  standby-gpios:
    description:
      Reference to the GPIO connected to the STANDBY pin (active high).
    maxItems: 1

  vcc-supply:
    description:
      Reference to a regulator powering the ap1302
    maxItems: 1

  port:
    $ref: /schemas/graph.yaml#/$defs/port-base
    unevaluatedProperties: false
    description: MIPI CSI-2 output interface to the host.

    properties:
      endpoint:
        $ref: /schemas/graph.yaml#/$defs/endpoint-base
        unevaluatedProperties: false

        properties:
          clock-noncontinuous:
            type: boolean

          link-frequencies:
            $ref: /schemas/types.yaml#/definitions/uint64-array
            description:
                MIPI Frequency from AP1302 to host. Set to the AP1302

          data-lanes:
            oneOf:
              - items:
                  - const: 1
              - items:
                  - const: 1
                  - const: 2
              - items:
                  - const: 1
                  - const: 2
                  - const: 3
                  - const: 4

        required:
          - data-lanes
          - link-frequency

  sensors:
    type: object
    description: List of connected sensors
    
      If no sensor is connected, this property must no be specified, and
      the AP1302 can be used with it's internal test pattern generator.

    properties:
      "#address-cells":
        const: 1

      "#size-cells":
        const: 0

      sensor,model:
        $ref: "/schemas/types.yaml#/definitions/string"
        description: |
          Model of the connected sensors. Must be a valid compatible string.

      sensor,resolution:
         description: |
            Sensor resolution as two 32bit value

      sensor,format:
         description: |
            Sensor format from MEDIA_BUS_FMT_xxxx

      sensor,primary-clk-rst-only:
        description: |
           Force using primary sensor clock (AP1302 GPIO0) and 
           reset (AP1302 GPIO1) for both sensor
           Secondary sensor clock and reset would be AP1302 GPIO2, GPIO3

    patternProperties:
      "^sensor@[01]":
        type: object
        description: |
          Sensors connected to the first and second input, with one node per
          sensor.

        properties:
          reg:
            description: AP1302 input port number
            maxItems: 1

          sip:
            description: Sensor SIP information (SIPM bus, I2C addres, ...)
            maxItems: 1
            
          status:
            description: Sensor status string
              - okay | ok : Sensor enabled
              - immutable : Sensor enabled and media link immutable
              - disabled : Sensor disabled
            maxItems: 1

          regulator-supplies:
            description: |
              List of string naming the sensor supplies
  
          regulator-delays:
            description: |
              List of int indicating the post delay us for the sensor supplies

        patternProperties:
          ".*-supply":
            description: Power supplies for the sensor

        required:
          - reg
          - sip
          - status

        additionalProperties: false

    required:
      - "#address-cells"
      - "#size-cells"

    additionalProperties: false

required:
  - compatible
  - reg
  - clocks
  - port

additionalProperties: false

examples:
  - |
    #include <dt-bindings/gpio/gpio.h>

    i2c {
        #address-cells = <1>;
        #size-cells = <0>;

        camera@3c {
            compatible = "onnn,ap1302";
            reg = <0x3c>;

            clocks = <&clk24mhz>;

            reset-gpios = <&pio 102 GPIO_ACTIVE_LOW>;
            standby-gpios = <&pio 40 GPIO_ACTIVE_HIGH>;

            port {
                isp1_out: endpoint {
                    remote-endpoint = <&seninf_in1>;
                    data-lanes = <1 2 3 4>;
                };
            };

            sensors {
                #address-cells = <1>;
                #size-cells = <0>;

                onnn,model = "onnn,ar0144";

                sensor@0 {
                    reg = <0>;

                    vdd-supply = <&mt6358_vcamd_reg>;
                    vaa-supply = <&mt6358_vcama1_reg>;
                    vddio-supply = <&reg_1p8v_ext>;
                };
            };
        };
    };

  - |
    #include <dt-bindings/gpio/gpio.h>

    i2c {
        #address-cells = <1>;
        #size-cells = <0>;

        camera@3c {
            compatible = "onnn,ap1302";
            reg = <0x3c>;

            clocks = <&topckgen 0>;

            reset-gpios = <&pio 102 GPIO_ACTIVE_LOW>;
            standby-gpios = <&pio 40 GPIO_ACTIVE_HIGH>;

            port {
                isp2_out: endpoint {
                    remote-endpoint = <&seninf_in1>;
                    data-lanes = <1 2>;
                };
            };

            sensors {
                #address-cells = <1>;
                #size-cells = <0>;
            };
        };
    };

  - |
  
	  &mipi_csi_0 {
		#address-cells = <1>;
		#size-cells = <0>;
		virtual-channel;
		status = "okay";

		port@0 {
			reg = <0>;
			mipi_csi0_ep: endpoint {
				remote-endpoint = <&ap1302_out_ep>;
				data-lanes = <1 2 3 4>;
			};
		};
	};
  
    ap1302_camera@3c {
        compatible = "onnn,ap1302";
        reg = <0x3c>;
        pinctrl-names = "default";
        pinctrl-0 = <&pinctrl_mipi_csi0>;
        clocks = <&ap1302_osc>;
        reset-gpios = <&lsio_gpio1 27 GPIO_ACTIVE_LOW>;
        vcc-supply = <&reg_ap1302>;

        status = "okay";

        port@2 {
            reg = <2>;
            ap1302_out_ep: endpoint {
                remote-endpoint = <&mipi_csi0_ep>;
                link-frequencies = /bits/ 64 <900000000>;
                clock-lanes = <0>;
                data-lanes = <1 2 3 4>;
            };
        };

        sensors {
            #address-cells = <1>;
            #size-cells = <0>;

            sensor,model = "ar1335";
            sensor,resolution = <3840 2160>;
            sensor,format = <0x300a>; // MEDIA_BUS_FMT_SGRBG10_1X10

            sensor@0 {
                reg = <0>;
                status = "okay";
                sip = <0xf36c>;
            };
            
            sensor@1 {
                reg = <1>;
                status = "disabled";
                sip = <0x376c>;
            };
        };
    };
  - |
    ap1302_camera@3c {
        compatible = "onnn,ap1302";
        reg = <0x3c>;
        pinctrl-names = "default";
        pinctrl-0 = <&pinctrl_mipi_csi0>;
        clocks = <&ap1302_osc>;
        reset-gpios = <&lsio_gpio1 27 GPIO_ACTIVE_LOW>;
        vcc-supply = <&reg_ap1302>;

        status = "okay";

        port@2 {
            reg = <2>;
            ap1302_out_ep: endpoint {
                remote-endpoint = <&mipi_csi0_ep>;
                link-frequencies = /bits/ 64 <900000000>;
                clock-lanes = <0>;
                data-lanes = <1 2 3 4>;
            };
        };

        sensors {
            #address-cells = <1>;
            #size-cells = <0>;

            sensor,model = "ar0144";
            sensor,resolution = <1280 800>;
            sensor,format = <0x3011>; // MEDIA_BUS_FMT_SGRBG12_1X12
            sensor,primary-clk-rst-only;

            sensor@0 {
                reg = <0>;
                status = "okay";
                sip = <0x3320>;
            };
            
            sensor@1 {
                reg = <1>;
                status = "disabled";
                sip = <0x3720>;
            };
        };
    };
    
  - |
  ap1302_camera@3c {
        compatible = "onnn,ap1302";
        reg = <0x3c>;
        pinctrl-names = "default";
        pinctrl-0 = <&pinctrl_mipi_csi0>;
        clocks = <&ap1302_osc>;
        reset-gpios = <&lsio_gpio1 27 GPIO_ACTIVE_LOW>;
        vcc-supply = <&reg_ap1302>;

        status = "okay";

        port@2 {
            reg = <2>;
            ap1302_out_ep: endpoint {
                remote-endpoint = <&mipi_csi0_ep>;
                link-frequencies = /bits/ 64 <900000000>;
                clock-lanes = <0>;
                data-lanes = <1 2 3 4>;
            };
        };

        sensors {
            #address-cells = <1>;
            #size-cells = <0>;

            sensor,model = "ar0830";
            sensor,resolution = <3840 2160>;
            sensor,format = <0x300a>; // MEDIA_BUS_FMT_SGRBG10_1X10

            sensor@0 {
                reg = <0>;
                status = "okay";
                sip = <0xF36C>;
            };
            
            sensor@1 {
                reg = <1>;
                status = "disabled";
                sip = <0x376C>;
            };
        };
    };
    
...
